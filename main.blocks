<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="+*Av6kZj@nuG*`KOEe:z">mnemonics</variable><variable id="fs(:SCWZEA-+L%OZ({{0">currentParam</variable><variable id="TKfM7KF$kL51RPc_Bpd{">weatherParam</variable></variables><block type="pxt-on-start" id="z+$|;#o!^pR55Sd?:nfh" x="20" y="20"><statement name="HANDLER"><block type="variables_set" id="=JR4H/):,j/hnh?(nCo8"><field name="VAR" id="TKfM7KF$kL51RPc_Bpd{">weatherParam</field><value name="VALUE"><shadow type="math_number" id="1t[?%zfgeX_k{`Z2=Lb3"><field name="NUM">0</field></shadow></value><next><block type="variables_set" id="@%s;N!oRR*r{,5[`cumm"><field name="VAR" id="+*Av6kZj@nuG*`KOEe:z">mnemonics</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with" id="QAgL.Rdv(X@tA=Zra]%K" inline="false"><mutation items="7"/><value name="ADD0"><shadow type="text" id="CVsx=s_(Dw9ILr]%ORBb"><field name="TEXT">temp</field></shadow></value><value name="ADD1"><shadow type="text" id="xi$YA2=I;3tpfALdYt8c"><field name="TEXT">humid</field></shadow></value><value name="ADD2"><shadow type="text" id="|yIDs@vrGv!3-w:P(.ic"><field name="TEXT">press</field></shadow></value><value name="ADD3"><shadow type="text" id="Gp-hN[J9Blk3HjT4V=S{"><field name="TEXT">wspeed</field></shadow></value><value name="ADD4"><shadow type="text" id="|v)Tw4Z5CWK,C%Q:#tU2"><field name="TEXT">wdir</field></shadow></value><value name="ADD5"><shadow type="text" id="$*ws[LY/[;X#M808:6.Y"><field name="TEXT">rain</field></shadow></value><value name="ADD6"><shadow type="text" id="n0A5v1|:.*v*skE3.}TR"><field name="TEXT">light</field></shadow></value></block></value><next><block type="weatherbit_startRainMonitoring" id="3atAiJR`qDdTi.HyM{?Q"><comment pinned="false" h="80" w="160">serial.redirect( SerialPin.P15, SerialPin.P14, BaudRate.BaudRate9600 )</comment><next><block type="weatherbit_startWindMonitoring" id="RLgGvy*j;;Z,b}[10j!("><next><block type="weatherbit_setupBME280" id="HO1OthD_%l1VJ2/uRBy%"><next><block type="serial_redirect_to_usb" id="~/hL_2q%cMY%R;98Z12;"/></next></block></next></block></next></block></next></block></next></block></statement></block><block type="function_definition" id="2TVrrV|B}0n1qMX!0TOU" x="450" y="20"><mutation name="readWeatherSensor" functionid="]w7:ry@_Hh^6d9)~r|lQ"><arg name="queryParam" id="718xu08sg1m4gdopix9" type="string"/></mutation><field name="function_name">readWeatherSensor</field><comment pinned="false" h="80" w="160">@param {string} queryParam - The mnemonic for the sensor</comment><value name="718xu08sg1m4gdopix9"><shadow type="argument_reporter_string" id="ZBrP:*fyeKH!Zc/O-KU,"><field name="VALUE">queryParam</field></shadow></value><statement name="STACK"><block type="typescript_statement" id="#xg~H+|wr_w6Wzy#TKy[" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch(queryParam) {" line1="        case 'temp':" line2="            return (weatherbit.temperature() / 100);break;" line3="        case 'humid':" line4="            return (weatherbit.humidity() / 1024);break;" line5="        case 'press':" line6="            return (weatherbit.pressure() / 25600);break;" line7="        case 'alt':" line8="            return weatherbit.altitude();break;" line9="        case 'wspeed':" line10="            return weatherbit.windSpeed() / 2.2369362920544;break;" line11="        case 'wdir':" line12="        switch (weatherbit.windDirection()) {" line13="            case 'N': return 0;break;" line14="            case 'NE': return 45;break;" line15="            case 'E': return 90;break;" line16="            case 'SE': return 135;break;" line17="            case 'S': return 180;break;" line18="            case 'SW': return 225;break;" line19="            case 'W': return 270;break;" line20="            case 'NW': return 315;break;" line21="            default: return 0; " line22="        } break;      " line23="        case 'rain':" line24="            return weatherbit.rain() / 25.4; break;" line25="        case 'light':" line26="            return input.lightLevel(); break;" line27="        case 'compass':" line28="            return input.compassHeading(); break;" line29="        default:" line30="            return 0;" line31="    }" numlines="32"></mutation></block></statement></block><block type="device_forever" id="d*+H?}8f8r~f_$5yzk^*" x="20" y="1455"><statement name="HANDLER"><block type="pxt_controls_for_of" id="b5r%`}o%C_vMl7}8#P?k"><value name="VAR"><shadow type="variables_get_reporter" id="i/@lnl~7M6YWRq.fIJ@Y"><field name="VAR" id="fs(:SCWZEA-+L%OZ({{0">currentParam</field></shadow></value><value name="LIST"><block type="variables_get" id="E9$bnd@1_Sp=FM?-Y0^X"><field name="VAR" id="+*Av6kZj@nuG*`KOEe:z">mnemonics</field></block></value><statement name="DO"><block type="serial_writevalue" id="Q%1G)R6i}{xr8Egb}*[/"><value name="name"><block type="variables_get" id="Hnoq*-cv]Sd0(U^;Vf|i"><field name="VAR" id="fs(:SCWZEA-+L%OZ({{0">currentParam</field></block></value><value name="value"><block type="function_call_output" id="X/|}*Wy2,2#4j8*bg%P;"><mutation name="readWeatherSensor" functionid="]w7:ry@_Hh^6d9)~r|lQ"><arg name="queryParam" id="718xu08sg1m4gdopix9" type="string"/></mutation><value name="718xu08sg1m4gdopix9"><shadow type="text" id="0lR|1h~[A!UJ@3t~h[2f"><field name="TEXT">abc</field></shadow><block type="variables_get" id="*jmyf%33$_Hz}njm|pJ/"><field name="VAR" id="fs(:SCWZEA-+L%OZ({{0">currentParam</field></block></value></block></value><next><block type="device_pause" id="R*H)nRN](Lg%Fy6]1ku:"><value name="pause"><shadow type="timePicker" id="UW%Uc]80g]tfqzZ%7X|f"><field name="ms">10000</field></shadow></value></block></next></block></statement></block></statement></block></xml>